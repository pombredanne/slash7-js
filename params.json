{"name":"SLASH-7 JavaScript library","tagline":"","body":"# Getting started\r\n\r\n## コードスニペットの挿入\r\n\r\n以下の `<script>` タグを最初に `slash7` にアクセスする前(たとえば `</head>` の直前など)に書きます。\r\n`[YOUR TRACKING CODE]` にはあなたのプロジェクト用に発行された tracking code を入れてください。\r\n\r\n````\r\n<script type=\"text/javascript\">\r\nvar slash7=slash7||[];!function(){var a=document.createElement(\"script\");a.type=\"text/javascript\",a.async=!0,a.src=(\"https:\"===document.location.protocol?\"https\":\"http\")+\"://d9nbmxmbhbtmj.cloudfront.net/v1/slash7.min.js\";var b=document.getElementsByTagName(\"script\")[0];b.parentNode.insertBefore(a,b);for(var c=function(a){return function(){slash7.push([a].concat(Array.prototype.slice.call(arguments,0)))}},d=[\"init\",\"identify\",\"trackPageLoad\",\"track\",\"register\"],e=0;e<d.length;e++)slash7[d[e]]=c(d[e])}();\r\nslash7.init(\"[YOUR TRACKING CODE]\");\r\n</script>\r\n````\r\n\r\n## イベントの送信\r\n\r\nイベントの送信は `slash7.track()` で行います。\r\n例えば `action1` イベントを送信するには次のようにします。\r\n\r\n````\r\nslash7.track(\"action1\");\r\n````\r\n\r\n### イベントパラメータ\r\n\r\nイベントパラメータは `slash7.track()` の第二引き数で指定します。\r\n例えば `url` をイベントパラメータとして指定してイベントを送信するには次のようにします。\r\n\r\n````\r\nslash7.track(\"action1\", {url: window.location.href});\r\n````\r\n\r\n### ページロードイベント送信\r\n\r\n`slash7.trackPageLoad()` はWebページのロードを表すイベントを送信します。\r\nこの関数は以下の情報を引き数にして `slash7.track()` を呼び出したときと同じ効果があります。\r\n\r\n* イベント名: `page_load`\r\n* イベントパラメータ\r\n    * `domain`: ページのドメイン\r\n    * `path`: ページのパス\r\n    * `query`: ページのクエリ部分\r\n    * `referer`: リファラ\r\n    * `referer_domain`: リファラのドメイン\r\n    * `platform`: `window.navigator.platform`\r\n    * `user_agent`: `window.navigator.userAgent`\r\n\r\n注意: `slash7.trackPageLoad()` は 2013年11月6日に追加されました。\r\n追加に伴い本文書冒頭のコードスニペットが変更されています。\r\n2013年11月6日以前にコードスニペットを導入し、かつ、`slash7.trackPageLoad()` を\r\n利用するお客様は、本文書冒頭に掲載しているコードスニペットに更新してください。\r\n\r\n### 課金イベント\r\n\r\n課金イベントでは課金に関する情報を `slash7.track()` の第三引き数で指定します。\r\n各 key の値については\r\n[Event log format](https://p-lucky.atlassian.net/wiki/display/PUB/Event+log+format)\r\nの Payment part を参照します。\r\n\r\n`_items` 内要素の `_name` を明示的に指定しない場合には `_item_id` の値が用いられます。\r\n`_total_price` を明示的に指定しない場合には `_items` の各要素の `_price * _num` の合計値が用いられます。\r\n\r\n````\r\nslash7.track(\r\n    \"payment\",\r\n    null,\r\n    {\r\n        _transact_id: \"transaction012345\",\r\n        _items: [\r\n            {\r\n                 _item_id: \"ITEM_A\",\r\n                 _price: 1000,\r\n                 _num: 1\r\n            }\r\n        ]\r\n    }\r\n);\r\n````\r\n\r\nイベントパラメータを指定しない場合には、第二引き数に `null` を渡します。\r\n\r\n## ユーザIDの指定\r\n\r\nユーザIDを JavaScript から指定することができます。\r\n\r\n初回はユーザIDがランダムに生成され、cookieに保存されます。\r\nそのため、異なるブラウザやコンピュータからアクセスした場合、同一ユーザでも異なるユーザIDで記録されます。\r\nまたバックエンドでもログを記録している場合、ランダムに生成されたユーザIDとバックエンドで記録しているアプリケーションのユーザIDを照合することは困難です。\r\nユーザIDを JavaScript から指定することで、指定したユーザIDを cookie に保存します。\r\n以降のイベント送信では保存されたユーザIDが使用されます。\r\n\r\nユーザIDを指定するには `slash7.identify()` を使います。\r\n\r\n````\r\nslash7.identify(\"user012345\");\r\n````\r\n\r\n## ユーザ属性\r\n\r\nユーザ属性は `slash7.register()` で指定します。\r\n指定されたユーザ属性は、次のイベント送信時にサーバへ送付されます。\r\nイベントを送付しなかった場合、指定したユーザ属性は失われるので注意してください。\r\n\r\n例えば userAgent, platform をユーザ属性として指定し、イベントを送付するには以下のようにします。\r\n\r\n````\r\nslash7.register({\r\n    userAgent: window.navigator.userAgent,\r\n    platform: window.navigator.platform\r\n});\r\nslash7.track(\"action1\");\r\n````\r\n\r\n## 複数のサブドメインをトラッキングする\r\n\r\nサブドメインに対してトラッキングを行いたい場合は、`slash7.init()` の第二引数に `domain` を指定してください。\r\n\r\n````\r\n// www.example.com と test.example.com の両方をトラッキングしたい場合\r\nslash7.init(\"[YOUR TRACKING CODE]\", {domain: \"example.com\"});\r\n````\r\n\r\n## サンプリング設定\r\n\r\nユーザベースのサンプリングを実施したい場合は、`slash7.init()` の第二引数に `samplingRate` を指定してください。\r\n`samplingRate` の値は 0 から 1 の間の数字を指定します。\r\n0を指定したときはどのユーザも記録しません（`track()`、`trackPageLoad()` 呼び出し時にイベントを送信しません）。\r\n1を指定したときは全ユーザを記録します。\r\n例えば 0.3 を指定したときは、全ユーザのおおよそ3割にあたるユーザを記録します。\r\n\r\n````\r\n// 3割のユーザを記録したい場合\r\nslash7.init(\"[YOUR TRACKING CODE]\", {samplingRate: 0.3});\r\n````\r\n\r\n`samplingRate` を指定しなかったときは全ユーザを記録します。\r\n\r\n`domain` と `samplingRate` は同時に指定できます。\r\n\r\n````\r\n// domain と samplingRate を同時に指定する場合\r\nslash7.init(\"[YOUR TRACKING CODE]\", {domain: \"example.com\", samplingRate: 0.3});\r\n````\r\n\r\n## リンククリックを追跡する際の注意点\r\n\r\nリンククリックを `slash7.track()` で追跡しようとした場合、イベントが送信されないことがあります。一見良さそうな以下のコードを見てください(jQuery を利用している前提です)。\r\n\r\n````\r\n// イベントが送信されないことがあるコード。 \r\n// <a id=\"link\" href=\"http://example.com\"> というリンクのクリックを追跡したい。\r\n$(\"#link\").click(function() {\r\n  slash7.track(\"click\");\r\n});\r\n````\r\n\r\n`slash7.track()` は非同期に実行されます。\r\n関数を呼び出した時点でイベントの送信を開始しますが、送信が完了する前にブラウザが次のページへ移動することがあります。\r\nこのときイベントは SLASH-7 に送信されない可能性があります。\r\n\r\nページの移動を少し遅らせることで問題を大きく改善できます。\r\n以下のようにページの移動を少し遅らせます。\r\n\r\n````\r\n$(\"#link\").click(function(event) {\r\n  var _this = this;\r\n  event.preventDefault();  // クリックによるページ移動を取り消す。\r\n  setTimeout(function() {  // 300ms 後に改めてページ移動する。\r\n    document.location.href = _this.href;\r\n  }, 300);\r\n  slash7.track(\"click\");\r\n});\r\n````\r\n\r\n\r\n### フォームの送信を追跡する\r\n\r\nフォーム送信を追跡する場合にも同様にイベントが送信されないことがあります。\r\n以下のようにすることで問題を改善することができます。\r\n\r\n````\r\n// <form id=\"form\" action=\"http://example.com\"> というフォームの送信を追跡したい\r\n$(\"#form\").submit(function(event) {\r\n  var _this = this;\r\n  event.preventDefault();  // フォーム送信を取り消す。\r\n  $(\":input\", this).attr(\"disabled\", true);  // 入力を無効にする。\r\n  // 300ms 後に改めてフォーム送信する。\r\n  setTimeout(function() {\r\n    _this.submit();\r\n  }, 300);\r\n  slash7.track(\"submit\");\r\n});\r\n````\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}